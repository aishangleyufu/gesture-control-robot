Interrupt Vectors
    00000 940C 008A JMP	__start|__text_start

Program Code (text area)
__start|__text_start:
    0008A EFCF      LDI	R28,0xFF
    0008B E2D1      LDI	R29,0x21
    0008C BFCD      OUT	0x3D,R28
    0008D BFDE      OUT	0x3E,R29
    0008E 51CE      SUBI	R28,0x1E
    0008F 40D0      SBCI	R29,0
    00090 EA0A      LDI	R16,0xAA
    00091 8308      ST	Y,R16
    00092 2400      CLR	R0
    00093 E0E6      LDI	R30,6
    00094 E0F2      LDI	R31,2
    00095 E012      LDI	R17,2
    00096 30EC      CPI	R30,0xC
    00097 07F1      CPC	R31,R17
    00098 F011      BEQ	0x009B
    00099 9201      ST	Z+,R0
    0009A CFFB      RJMP	0x0096
    0009B 8300      ST	Z,R16
    0009C E0EE      LDI	R30,0xE
    0009D E0F1      LDI	R31,1
    0009E E0A0      LDI	R26,0
    0009F E0B2      LDI	R27,2
    000A0 E011      LDI	R17,1
    000A1 E000      LDI	R16,0
    000A2 BF0B      OUT	0x3B,R16
    000A3 31E4      CPI	R30,0x14
    000A4 07F1      CPC	R31,R17
    000A5 F021      BEQ	0x00AA
    000A6 95C8      LPM
    000A7 9631      ADIW	R30,1
    000A8 920D      ST	X+,R0
    000A9 CFF9      RJMP	0x00A3
    000AA 940E 039E CALL	_main
_exit:
    000AC CFFF      RJMP	_exit
FILE: D:\Documents\Atmel\CAVRSA~1\try\main3.c
(0001) /*======
(0002) 使用定时器1，OCR1A,OCR1B,OCR1C三个管脚同时输出PWM波形
(0003) 在快速PWM的模式下，top=0x03ff=1023
(0004) OCRnX在top时刻更新
(0005) 频率=8000000/8/1023=977.5HZ
(0006) =======================================================*/
(0007) #include<iom128v.h>
(0008) #include<string.h> 
(0009) #include <macros.h> 
(0010) #define fosc 16000000  //晶振16MHZ
(0011) #define baud 38400  //波特率
(0012) #define    m1 OCR1A 
(0013) #define     m2 OCR1B  
(0014) #define     m3 OCR1C  
(0015) #define      m4OCR3A   
(0016) #define     m5 OCR3B  
(0017) #define       m6 OCR3C 
(0018) int flag=0;
(0019) int tempflag1=0;
(0020) int tempflag2=0;
(0021) int i,j,k;
(0022) 
(0023) void delay(int time)
(0024) {
(0025)        	 
(0026) 			for(i=0;i<1000;i++)
_delay:
  time                 --> R16
    000AD 2422      CLR	R2
    000AE 2433      CLR	R3
    000AF 9230 020B STS	i+1,R3
    000B1 9220 020A STS	i,R2
(0027)    				{for(j=0;j<1000;j++)
    000B3 2422      CLR	R2
    000B4 2433      CLR	R3
    000B5 9230 0209 STS	j+1,R3
    000B7 9220 0208 STS	j,R2
(0028)    			   {for(k=0;k<time;k++)   //k<10,约三秒  
    000B9 2422      CLR	R2
    000BA 2433      CLR	R3
    000BB 9230 0207 STS	k+1,R3
    000BD 9220 0206 STS	k,R2
    000BF C009      RJMP	0x00C9
    000C0 9180 0206 LDS	R24,k
    000C2 9190 0207 LDS	R25,k+1
    000C4 9601      ADIW	R24,1
    000C5 9390 0207 STS	k+1,R25
    000C7 9380 0206 STS	k,R24
    000C9 9020 0206 LDS	R2,k
    000CB 9030 0207 LDS	R3,k+1
    000CD 1620      CP	R2,R16
    000CE 0631      CPC	R3,R17
    000CF F384      BLT	0x00C0
    000D0 9180 0208 LDS	R24,j
    000D2 9190 0209 LDS	R25,j+1
    000D4 9601      ADIW	R24,1
    000D5 9390 0209 STS	j+1,R25
    000D7 9380 0208 STS	j,R24
    000D9 3E88      CPI	R24,0xE8
    000DA E0E3      LDI	R30,3
    000DB 079E      CPC	R25,R30
    000DC F2E4      BLT	0x00B9
    000DD 9180 020A LDS	R24,i
    000DF 9190 020B LDS	R25,i+1
    000E1 9601      ADIW	R24,1
    000E2 9390 020B STS	i+1,R25
    000E4 9380 020A STS	i,R24
    000E6 3E88      CPI	R24,0xE8
    000E7 E0E3      LDI	R30,3
    000E8 079E      CPC	R25,R30
    000E9 F24C      BLT	0x00B3
    000EA 9508      RET
(0029)     					; 
(0030)  	                 }
(0031)    	                }
(0032) }
(0033) 
(0034) void PWM_init()
(0035) {
(0036)    DDRB|=0XE0;
_PWM_init:
    000EB B387      IN	R24,0x17
    000EC 6E80      ORI	R24,0xE0
    000ED BB87      OUT	0x17,R24
(0037)    DDRE|=0X38;
    000EE B182      IN	R24,0x02
    000EF 6388      ORI	R24,0x38
    000F0 B982      OUT	0x02,R24
(0038) TCCR1B|=(1<<WGM12)|(1<<WGM13)|(1<<CS11);
    000F1 B58E      IN	R24,0x2E
    000F2 618A      ORI	R24,0x1A
    000F3 BD8E      OUT	0x2E,R24
(0039) TCCR1A|=(1<<COM1C1)|(1<<COM1A1)|(1<<COM1B1)|(1<<WGM11);   //选通ABC                 
    000F4 B58F      IN	R24,0x2F
    000F5 6A8A      ORI	R24,0xAA
    000F6 BD8F      OUT	0x2F,R24
(0040) 	ICR1=40000;
    000F7 E480      LDI	R24,0x40
    000F8 E99C      LDI	R25,0x9C
    000F9 BD97      OUT	0x27,R25
    000FA BD86      OUT	0x26,R24
(0041) TCCR3B|=(1<<WGM12)|(1<<WGM13)|(1<<CS11)|(1<<CS01);
    000FB 9180 008A LDS	R24,0x8A
    000FD 618A      ORI	R24,0x1A
    000FE 9380 008A STS	0x8A,R24
(0042) TCCR3A|=(1<<COM3A1)|(1<<COM3B1)|(1<<COM3C1)|(1<<WGM11);  //选通ABC
    00100 9180 008B LDS	R24,0x8B
    00102 6A8A      ORI	R24,0xAA
    00103 9380 008B STS	0x8B,R24
(0043) 	ICR3=40000;
    00105 E480      LDI	R24,0x40
    00106 9390 0081 STS	0x81,R25
    00108 9380 0080 STS	0x80,R24
(0044) 	OCR1A=3000;
    0010A EB88      LDI	R24,0xB8
    0010B E09B      LDI	R25,0xB
    0010C BD9B      OUT	0x2B,R25
    0010D BD8A      OUT	0x2A,R24
(0045) 	OCR1B=3000;
    0010E BD99      OUT	0x29,R25
    0010F BD88      OUT	0x28,R24
(0046) 	OCR1C=3000;
    00110 9390 0079 STS	0x79,R25
    00112 9380 0078 STS	0x78,R24
(0047) 	OCR3A=3000;
    00114 9390 0087 STS	0x87,R25
    00116 9380 0086 STS	0x86,R24
(0048) 	OCR3B=3000;
    00118 9390 0085 STS	0x85,R25
    0011A 9380 0084 STS	0x84,R24
(0049) 	OCR3C=3000;
    0011C 9390 0083 STS	0x83,R25
    0011E 9380 0082 STS	0x82,R24
    00120 9508      RET
_action_set:
  action_do_last       --> Y,+16
  ch_3c                --> R20
  ch_3b                --> R22
  ch_3a                --> R10
  ch_1c                --> R12
  ch_1b                --> R18
  ch_1a                --> R16
    00121 940E 03EA CALL	push_xgsetF03C
    00123 84C8      LDD	R12,Y+8
    00124 84D9      LDD	R13,Y+9
    00125 84AA      LDD	R10,Y+10
    00126 84BB      LDD	R11,Y+11
    00127 856C      LDD	R22,Y+12
    00128 857D      LDD	R23,Y+13
    00129 854E      LDD	R20,Y+14
    0012A 855F      LDD	R21,Y+15
(0050) }
(0051) 
(0052) void action_set(int ch_1a, int ch_1b, int ch_1c, int ch_3a, int ch_3b, int ch_3c, int action_do_last)
(0053) {
(0054)     OCR1A=ch_1a+3000;
    0012B 01C8      MOVW	R24,R16
    0012C 5488      SUBI	R24,0x48
    0012D 4F94      SBCI	R25,0xF4
    0012E BD9B      OUT	0x2B,R25
    0012F BD8A      OUT	0x2A,R24
(0055) 	OCR1B=ch_1b+3000;
    00130 01C9      MOVW	R24,R18
    00131 5488      SUBI	R24,0x48
    00132 4F94      SBCI	R25,0xF4
    00133 BD99      OUT	0x29,R25
    00134 BD88      OUT	0x28,R24
(0056) 	OCR1C=ch_1c+3000;
    00135 01C6      MOVW	R24,R12
    00136 5488      SUBI	R24,0x48
    00137 4F94      SBCI	R25,0xF4
    00138 9390 0079 STS	0x79,R25
    0013A 9380 0078 STS	0x78,R24
(0057) 	OCR3A=ch_3a+3000;
    0013C 01C5      MOVW	R24,R10
    0013D 5488      SUBI	R24,0x48
    0013E 4F94      SBCI	R25,0xF4
    0013F 9390 0087 STS	0x87,R25
    00141 9380 0086 STS	0x86,R24
(0058) 	OCR3B=ch_3b+3000;
    00143 01CB      MOVW	R24,R22
    00144 5488      SUBI	R24,0x48
    00145 4F94      SBCI	R25,0xF4
    00146 9390 0085 STS	0x85,R25
    00148 9380 0084 STS	0x84,R24
(0059) 	OCR3C=ch_3c+3000;
    0014A 01CA      MOVW	R24,R20
    0014B 5488      SUBI	R24,0x48
    0014C 4F94      SBCI	R25,0xF4
    0014D 9390 0083 STS	0x83,R25
    0014F 9380 0082 STS	0x82,R24
    00151 940C 03F3 JMP	pop_xgsetF03C
_action_base:
  number               --> R20
    00153 934A      ST	-Y,R20
    00154 935A      ST	-Y,R21
    00155 01A8      MOVW	R20,R16
    00156 972A      SBIW	R28,0xA
(0060) }
(0061) 
(0062) void action_base(int number)
(0063) { switch(number)
    00157 3040      CPI	R20,0
    00158 E0E0      LDI	R30,0
    00159 075E      CPC	R21,R30
    0015A F40C      BGE	0x015C
    0015B C1F2      RJMP	0x034E
    0015C E184      LDI	R24,0x14
    0015D E090      LDI	R25,0
    0015E 1784      CP	R24,R20
    0015F 0795      CPC	R25,R21
    00160 F40C      BGE	0x0162
    00161 C1EC      RJMP	0x034E
    00162 EE84      LDI	R24,0xE4
    00163 E090      LDI	R25,0
    00164 01FA      MOVW	R30,R20
    00165 0FEE      LSL	R30
    00166 1FFF      ROL	R31
    00167 0FE8      ADD	R30,R24
    00168 1FF9      ADC	R31,R25
    00169 9027      ELPM	R2,Z+
    0016A 9036      ELPM	R3,Z
    0016B 01F1      MOVW	R30,R2
    0016C 9409      IJMP
(0064) {
(0065) case 0:{action_set(0,0,0,0,0,0,100);break;} //直立
    0016D E684      LDI	R24,0x64
    0016E E090      LDI	R25,0
    0016F 8799      STD	Y+9,R25
    00170 8788      STD	Y+8,R24
    00171 2422      CLR	R2
    00172 2433      CLR	R3
    00173 823F      STD	Y+7,R3
    00174 822E      STD	Y+6,R2
    00175 823D      STD	Y+5,R3
    00176 822C      STD	Y+4,R2
    00177 823B      STD	Y+3,R3
    00178 822A      STD	Y+2,R2
    00179 8239      STD	Y+1,R3
    0017A 8228      ST	Y,R2
    0017B 2722      CLR	R18
    0017C 2733      CLR	R19
    0017D 2700      CLR	R16
    0017E 2711      CLR	R17
    0017F DFA1      RCALL	_action_set
    00180 C1CD      RJMP	0x034E
(0066) //case 1:{action_set(0,0,-200,700,0,0,50);break;} //右脚左倾											   #####
(0067) case 1:{action_set(0,0,-750,1200,0,0,40);break;} //左脚左倾	  			-300/-400						#####
    00181 E288      LDI	R24,0x28
    00182 E090      LDI	R25,0
    00183 8799      STD	Y+9,R25
    00184 8788      STD	Y+8,R24
    00185 2422      CLR	R2
    00186 2433      CLR	R3
    00187 823F      STD	Y+7,R3
    00188 822E      STD	Y+6,R2
    00189 823D      STD	Y+5,R3
    0018A 822C      STD	Y+4,R2
    0018B EB80      LDI	R24,0xB0
    0018C E094      LDI	R25,4
    0018D 839B      STD	Y+3,R25
    0018E 838A      STD	Y+2,R24
    0018F E182      LDI	R24,0x12
    00190 EF9D      LDI	R25,0xFD
    00191 8399      STD	Y+1,R25
    00192 8388      ST	Y,R24
    00193 2722      CLR	R18
    00194 2733      CLR	R19
    00195 2700      CLR	R16
    00196 2711      CLR	R17
    00197 DF89      RCALL	_action_set
    00198 C1B5      RJMP	0x034E
(0068) case 2:{action_set(0,0,-600,0,1200,1200,100);break;} //右抬脚，同时右脚放平							 #####
    00199 E684      LDI	R24,0x64
    0019A E090      LDI	R25,0
    0019B 8799      STD	Y+9,R25
    0019C 8788      STD	Y+8,R24
    0019D EB80      LDI	R24,0xB0
    0019E E094      LDI	R25,4
    0019F 839F      STD	Y+7,R25
    001A0 838E      STD	Y+6,R24
    001A1 839D      STD	Y+5,R25
    001A2 838C      STD	Y+4,R24
    001A3 2422      CLR	R2
    001A4 2433      CLR	R3
    001A5 823B      STD	Y+3,R3
    001A6 822A      STD	Y+2,R2
    001A7 EA88      LDI	R24,0xA8
    001A8 EF9D      LDI	R25,0xFD
    001A9 8399      STD	Y+1,R25
    001AA 8388      ST	Y,R24
    001AB 2722      CLR	R18
    001AC 2733      CLR	R19
    001AD 2700      CLR	R16
    001AE 2711      CLR	R17
    001AF DF71      RCALL	_action_set
    001B0 C19D      RJMP	0x034E
(0069) //case 4:{action_set(700,700,-350,-400,700,700,50);break;} //左弯脚 3,4可以一起完成
(0070) //case 5:{action_set(700,700,0,0,700,700,50);break;} //转正	
(0071) case 3:{action_set(300,600,0,0,600,900,75);break;} //前倾，1号舵机-500，6号舵机+500，把重心转移到前脚上#####
    001B1 E48B      LDI	R24,0x4B
    001B2 E090      LDI	R25,0
    001B3 8799      STD	Y+9,R25
    001B4 8788      STD	Y+8,R24
    001B5 E884      LDI	R24,0x84
    001B6 E093      LDI	R25,3
    001B7 839F      STD	Y+7,R25
    001B8 838E      STD	Y+6,R24
    001B9 E588      LDI	R24,0x58
    001BA E092      LDI	R25,2
    001BB 839D      STD	Y+5,R25
    001BC 838C      STD	Y+4,R24
    001BD 2422      CLR	R2
    001BE 2433      CLR	R3
    001BF 823B      STD	Y+3,R3
    001C0 822A      STD	Y+2,R2
    001C1 8239      STD	Y+1,R3
    001C2 8228      ST	Y,R2
    001C3 E528      LDI	R18,0x58
    001C4 E032      LDI	R19,2
    001C5 E20C      LDI	R16,0x2C
    001C6 E011      LDI	R17,1
    001C7 DF59      RCALL	_action_set
    001C8 C185      RJMP	0x034E
(0072) case 4:{action_set(300,600,450,350,600,900,50);break;} //左脚右倾	 	前倾								  #####
    001C9 E382      LDI	R24,0x32
    001CA E090      LDI	R25,0
    001CB 8799      STD	Y+9,R25
    001CC 8788      STD	Y+8,R24
    001CD E884      LDI	R24,0x84
    001CE E093      LDI	R25,3
    001CF 839F      STD	Y+7,R25
    001D0 838E      STD	Y+6,R24
    001D1 E588      LDI	R24,0x58
    001D2 E092      LDI	R25,2
    001D3 839D      STD	Y+5,R25
    001D4 838C      STD	Y+4,R24
    001D5 E58E      LDI	R24,0x5E
    001D6 E091      LDI	R25,1
    001D7 839B      STD	Y+3,R25
    001D8 838A      STD	Y+2,R24
    001D9 EC82      LDI	R24,0xC2
    001DA 8399      STD	Y+1,R25
    001DB 8388      ST	Y,R24
    001DC E528      LDI	R18,0x58
    001DD E032      LDI	R19,2
    001DE E20C      LDI	R16,0x2C
    001DF E011      LDI	R17,1
    001E0 DF40      RCALL	_action_set
    001E1 C16C      RJMP	0x034E
(0073) //case 8:{action_set(400,700,-750,300,700,1000,50);break;} //右脚右倾，度数还得减小	 
(0074) case 5:{action_set(300,600,0,300,0,300,50);break;} //右脚立正  ，前倾
    001E2 E382      LDI	R24,0x32
    001E3 E090      LDI	R25,0
    001E4 8799      STD	Y+9,R25
    001E5 8788      STD	Y+8,R24
    001E6 E28C      LDI	R24,0x2C
    001E7 E091      LDI	R25,1
    001E8 839F      STD	Y+7,R25
    001E9 838E      STD	Y+6,R24
    001EA 2422      CLR	R2
    001EB 2433      CLR	R3
    001EC 823D      STD	Y+5,R3
    001ED 822C      STD	Y+4,R2
    001EE 839B      STD	Y+3,R25
    001EF 838A      STD	Y+2,R24
    001F0 8239      STD	Y+1,R3
    001F1 8228      ST	Y,R2
    001F2 E528      LDI	R18,0x58
    001F3 E032      LDI	R19,2
    001F4 E20C      LDI	R16,0x2C
    001F5 E011      LDI	R17,1
    001F6 DF2A      RCALL	_action_set
    001F7 C156      RJMP	0x034E
(0075) case 6:{action_set(0,0,0,300,0,0,25);break;} //左脚回正	 	同时，左脚放平，取消前倾			   #####
    001F8 E189      LDI	R24,0x19
    001F9 E090      LDI	R25,0
    001FA 8799      STD	Y+9,R25
    001FB 8788      STD	Y+8,R24
    001FC 2422      CLR	R2
    001FD 2433      CLR	R3
    001FE 823F      STD	Y+7,R3
    001FF 822E      STD	Y+6,R2
    00200 823D      STD	Y+5,R3
    00201 822C      STD	Y+4,R2
    00202 E28C      LDI	R24,0x2C
    00203 E091      LDI	R25,1
    00204 839B      STD	Y+3,R25
    00205 838A      STD	Y+2,R24
    00206 8239      STD	Y+1,R3
    00207 8228      ST	Y,R2
    00208 2722      CLR	R18
    00209 2733      CLR	R19
    0020A 2700      CLR	R16
    0020B 2711      CLR	R17
    0020C DF14      RCALL	_action_set
    0020D C140      RJMP	0x034E
(0076) case 7:{action_set(-600,-600,0,300,0,0,25);break;} //左抬脚										   #####
    0020E E189      LDI	R24,0x19
    0020F E090      LDI	R25,0
    00210 8799      STD	Y+9,R25
    00211 8788      STD	Y+8,R24
    00212 2422      CLR	R2
    00213 2433      CLR	R3
    00214 823F      STD	Y+7,R3
    00215 822E      STD	Y+6,R2
    00216 823D      STD	Y+5,R3
    00217 822C      STD	Y+4,R2
    00218 E28C      LDI	R24,0x2C
    00219 E091      LDI	R25,1
    0021A 839B      STD	Y+3,R25
    0021B 838A      STD	Y+2,R24
    0021C 8239      STD	Y+1,R3
    0021D 8228      ST	Y,R2
    0021E EA28      LDI	R18,0xA8
    0021F EF3D      LDI	R19,0xFD
    00220 EA08      LDI	R16,0xA8
    00221 EF1D      LDI	R17,0xFD
    00222 DEFE      RCALL	_action_set
    00223 C12A      RJMP	0x034E
(0077) //case 12:{action_set(-700,-700,400,300,-700,-700,50);break;} //右弯脚	11,12可以一起完成 ，前脚未着地
(0078) //case 13:{action_set(-700,-700,0,0,-700,-700,50);break;} //右转正 
(0079) case 8:{action_set(-600,-400,0,0,-400,-600,75);break;} //前倾，1号舵机-500，6号舵机+500，把重心转移到前脚上，左脚稍弯##### 
    00224 E48B      LDI	R24,0x4B
    00225 E090      LDI	R25,0
    00226 8799      STD	Y+9,R25
    00227 8788      STD	Y+8,R24
    00228 EA88      LDI	R24,0xA8
    00229 EF9D      LDI	R25,0xFD
    0022A 839F      STD	Y+7,R25
    0022B 838E      STD	Y+6,R24
    0022C E780      LDI	R24,0x70
    0022D EF9E      LDI	R25,0xFE
    0022E 839D      STD	Y+5,R25
    0022F 838C      STD	Y+4,R24
    00230 2422      CLR	R2
    00231 2433      CLR	R3
    00232 823B      STD	Y+3,R3
    00233 822A      STD	Y+2,R2
    00234 8239      STD	Y+1,R3
    00235 8228      ST	Y,R2
    00236 E720      LDI	R18,0x70
    00237 EF3E      LDI	R19,0xFE
    00238 EA08      LDI	R16,0xA8
    00239 EF1D      LDI	R17,0xFD
    0023A DEE6      RCALL	_action_set
    0023B C112      RJMP	0x034E
(0080) case 9:{action_set(-600,-400,-350,-450,-400,-600,50);break;} //右脚左倾   	前倾								#####
    0023C E382      LDI	R24,0x32
    0023D E090      LDI	R25,0
    0023E 8799      STD	Y+9,R25
    0023F 8788      STD	Y+8,R24
    00240 EA88      LDI	R24,0xA8
    00241 EF9D      LDI	R25,0xFD
    00242 839F      STD	Y+7,R25
    00243 838E      STD	Y+6,R24
    00244 E780      LDI	R24,0x70
    00245 EF9E      LDI	R25,0xFE
    00246 839D      STD	Y+5,R25
    00247 838C      STD	Y+4,R24
    00248 E38E      LDI	R24,0x3E
    00249 839B      STD	Y+3,R25
    0024A 838A      STD	Y+2,R24
    0024B EA82      LDI	R24,0xA2
    0024C 8399      STD	Y+1,R25
    0024D 8388      ST	Y,R24
    0024E E720      LDI	R18,0x70
    0024F EF3E      LDI	R19,0xFE
    00250 EA08      LDI	R16,0xA8
    00251 EF1D      LDI	R17,0xFD
    00252 DECE      RCALL	_action_set
    00253 C0FA      RJMP	0x034E
(0081) //case 16:{action_set(-1000,-700,-250,-350,-700,-400,50);break;} //左脚左倾   
(0082) case 10:{action_set(0,0,-300,-450,-600,-600,50);break;} //左立正，前倾
    00254 E382      LDI	R24,0x32
    00255 E090      LDI	R25,0
    00256 8799      STD	Y+9,R25
    00257 8788      STD	Y+8,R24
    00258 EA88      LDI	R24,0xA8
    00259 EF9D      LDI	R25,0xFD
    0025A 839F      STD	Y+7,R25
    0025B 838E      STD	Y+6,R24
    0025C 839D      STD	Y+5,R25
    0025D 838C      STD	Y+4,R24
    0025E E38E      LDI	R24,0x3E
    0025F EF9E      LDI	R25,0xFE
    00260 839B      STD	Y+3,R25
    00261 838A      STD	Y+2,R24
    00262 ED84      LDI	R24,0xD4
    00263 8399      STD	Y+1,R25
    00264 8388      ST	Y,R24
    00265 2722      CLR	R18
    00266 2733      CLR	R19
    00267 2700      CLR	R16
    00268 2711      CLR	R17
    00269 DEB7      RCALL	_action_set
    0026A C0E3      RJMP	0x034E
(0083) //case 10:{action_set(0,0,-300,0,0,0,75);break;} //右回正，取消前倾可以回到3，右抬脚，或者回到0		  #####
(0084) 
(0085) case 11:{action_set(0,0,-300,0,-600,-800,50);break;} //右后抬脚，同时右脚放平							 #####
    0026B E382      LDI	R24,0x32
    0026C E090      LDI	R25,0
    0026D 8799      STD	Y+9,R25
    0026E 8788      STD	Y+8,R24
    0026F EE80      LDI	R24,0xE0
    00270 EF9C      LDI	R25,0xFC
    00271 839F      STD	Y+7,R25
    00272 838E      STD	Y+6,R24
    00273 EA88      LDI	R24,0xA8
    00274 EF9D      LDI	R25,0xFD
    00275 839D      STD	Y+5,R25
    00276 838C      STD	Y+4,R24
    00277 2422      CLR	R2
    00278 2433      CLR	R3
    00279 823B      STD	Y+3,R3
    0027A 822A      STD	Y+2,R2
    0027B ED84      LDI	R24,0xD4
    0027C EF9E      LDI	R25,0xFE
    0027D 8399      STD	Y+1,R25
    0027E 8388      ST	Y,R24
    0027F 2722      CLR	R18
    00280 2733      CLR	R19
    00281 2700      CLR	R16
    00282 2711      CLR	R17
    00283 DE9D      RCALL	_action_set
    00284 C0C9      RJMP	0x034E
(0086) case 12:{action_set(-750,-400,0,0,-400,-750,75);break;} //后倾，1号舵机+500，6号舵机-500，重心转移到后脚，右脚稍弯#####
    00285 E48B      LDI	R24,0x4B
    00286 E090      LDI	R25,0
    00287 8799      STD	Y+9,R25
    00288 8788      STD	Y+8,R24
    00289 E182      LDI	R24,0x12
    0028A EF9D      LDI	R25,0xFD
    0028B 839F      STD	Y+7,R25
    0028C 838E      STD	Y+6,R24
    0028D E780      LDI	R24,0x70
    0028E EF9E      LDI	R25,0xFE
    0028F 839D      STD	Y+5,R25
    00290 838C      STD	Y+4,R24
    00291 2422      CLR	R2
    00292 2433      CLR	R3
    00293 823B      STD	Y+3,R3
    00294 822A      STD	Y+2,R2
    00295 8239      STD	Y+1,R3
    00296 8228      ST	Y,R2
    00297 E720      LDI	R18,0x70
    00298 EF3E      LDI	R19,0xFE
    00299 E102      LDI	R16,0x12
    0029A EF1D      LDI	R17,0xFD
    0029B DE85      RCALL	_action_set
    0029C C0B1      RJMP	0x034E
(0087) case 13:{action_set(-750,-400,400,300,-400,-750,50);break;} //脚右倾	 	
    0029D E382      LDI	R24,0x32
    0029E E090      LDI	R25,0
    0029F 8799      STD	Y+9,R25
    002A0 8788      STD	Y+8,R24
    002A1 E182      LDI	R24,0x12
    002A2 EF9D      LDI	R25,0xFD
    002A3 839F      STD	Y+7,R25
    002A4 838E      STD	Y+6,R24
    002A5 E780      LDI	R24,0x70
    002A6 EF9E      LDI	R25,0xFE
    002A7 839D      STD	Y+5,R25
    002A8 838C      STD	Y+4,R24
    002A9 E28C      LDI	R24,0x2C
    002AA E091      LDI	R25,1
    002AB 839B      STD	Y+3,R25
    002AC 838A      STD	Y+2,R24
    002AD E980      LDI	R24,0x90
    002AE 8399      STD	Y+1,R25
    002AF 8388      ST	Y,R24
    002B0 E720      LDI	R18,0x70
    002B1 EF3E      LDI	R19,0xFE
    002B2 E102      LDI	R16,0x12
    002B3 EF1D      LDI	R17,0xFD
    002B4 DE6C      RCALL	_action_set
    002B5 C098      RJMP	0x034E
(0088) case 14:{action_set(-750,-600,0,250,0,0,50);break;} //右脚回正	 	同时，左脚放平，取消前倾			   #####								  #####
    002B6 E382      LDI	R24,0x32
    002B7 E090      LDI	R25,0
    002B8 8799      STD	Y+9,R25
    002B9 8788      STD	Y+8,R24
    002BA 2422      CLR	R2
    002BB 2433      CLR	R3
    002BC 823F      STD	Y+7,R3
    002BD 822E      STD	Y+6,R2
    002BE 823D      STD	Y+5,R3
    002BF 822C      STD	Y+4,R2
    002C0 EF8A      LDI	R24,0xFA
    002C1 839B      STD	Y+3,R25
    002C2 838A      STD	Y+2,R24
    002C3 8239      STD	Y+1,R3
    002C4 8228      ST	Y,R2
    002C5 EA28      LDI	R18,0xA8
    002C6 EF3D      LDI	R19,0xFD
    002C7 E102      LDI	R16,0x12
    002C8 EF1D      LDI	R17,0xFD
    002C9 DE57      RCALL	_action_set
    002CA C083      RJMP	0x034E
(0089) case 15:{action_set(0,0,0,250,0,0,40);break;} //右脚回正	 	同时，左脚放平，取消前倾			   #####
    002CB E288      LDI	R24,0x28
    002CC E090      LDI	R25,0
    002CD 8799      STD	Y+9,R25
    002CE 8788      STD	Y+8,R24
    002CF 2422      CLR	R2
    002D0 2433      CLR	R3
    002D1 823F      STD	Y+7,R3
    002D2 822E      STD	Y+6,R2
    002D3 823D      STD	Y+5,R3
    002D4 822C      STD	Y+4,R2
    002D5 EF8A      LDI	R24,0xFA
    002D6 839B      STD	Y+3,R25
    002D7 838A      STD	Y+2,R24
    002D8 8239      STD	Y+1,R3
    002D9 8228      ST	Y,R2
    002DA 2722      CLR	R18
    002DB 2733      CLR	R19
    002DC 2700      CLR	R16
    002DD 2711      CLR	R17
    002DE DE42      RCALL	_action_set
    002DF C06E      RJMP	0x034E
(0090) case 16:{action_set(600,600,0,250,0,0,40);break;} //左后抬脚										   #####
    002E0 E288      LDI	R24,0x28
    002E1 E090      LDI	R25,0
    002E2 8799      STD	Y+9,R25
    002E3 8788      STD	Y+8,R24
    002E4 2422      CLR	R2
    002E5 2433      CLR	R3
    002E6 823F      STD	Y+7,R3
    002E7 822E      STD	Y+6,R2
    002E8 823D      STD	Y+5,R3
    002E9 822C      STD	Y+4,R2
    002EA EF8A      LDI	R24,0xFA
    002EB 839B      STD	Y+3,R25
    002EC 838A      STD	Y+2,R24
    002ED 8239      STD	Y+1,R3
    002EE 8228      ST	Y,R2
    002EF E528      LDI	R18,0x58
    002F0 E032      LDI	R19,2
    002F1 E508      LDI	R16,0x58
    002F2 E012      LDI	R17,2
    002F3 DE2D      RCALL	_action_set
    002F4 C059      RJMP	0x034E
(0091) case 17:{action_set(600,600,0,0,600,600,50);break;} //后倾，1号舵机+500，6号舵机-500，把重心转移到前脚上##### 
    002F5 E382      LDI	R24,0x32
    002F6 E090      LDI	R25,0
    002F7 8799      STD	Y+9,R25
    002F8 8788      STD	Y+8,R24
    002F9 E588      LDI	R24,0x58
    002FA E092      LDI	R25,2
    002FB 839F      STD	Y+7,R25
    002FC 838E      STD	Y+6,R24
    002FD 839D      STD	Y+5,R25
    002FE 838C      STD	Y+4,R24
    002FF 2422      CLR	R2
    00300 2433      CLR	R3
    00301 823B      STD	Y+3,R3
    00302 822A      STD	Y+2,R2
    00303 8239      STD	Y+1,R3
    00304 8228      ST	Y,R2
    00305 E528      LDI	R18,0x58
    00306 E032      LDI	R19,2
    00307 E508      LDI	R16,0x58
    00308 E012      LDI	R17,2
    00309 DE17      RCALL	_action_set
    0030A C043      RJMP	0x034E
(0092) case 18:{action_set(600,600,-350,-450,600,600,50);break;} //脚左倾   									#####
    0030B E382      LDI	R24,0x32
    0030C E090      LDI	R25,0
    0030D 8799      STD	Y+9,R25
    0030E 8788      STD	Y+8,R24
    0030F E588      LDI	R24,0x58
    00310 E092      LDI	R25,2
    00311 839F      STD	Y+7,R25
    00312 838E      STD	Y+6,R24
    00313 839D      STD	Y+5,R25
    00314 838C      STD	Y+4,R24
    00315 E38E      LDI	R24,0x3E
    00316 EF9E      LDI	R25,0xFE
    00317 839B      STD	Y+3,R25
    00318 838A      STD	Y+2,R24
    00319 EA82      LDI	R24,0xA2
    0031A 8399      STD	Y+1,R25
    0031B 8388      ST	Y,R24
    0031C E528      LDI	R18,0x58
    0031D E032      LDI	R19,2
    0031E E508      LDI	R16,0x58
    0031F E012      LDI	R17,2
    00320 DE00      RCALL	_action_set
    00321 C02C      RJMP	0x034E
(0093) case 19:{action_set(0,0,-300,-450,600,600,50);break;} //脚左倾   									#####
    00322 E382      LDI	R24,0x32
    00323 E090      LDI	R25,0
    00324 8799      STD	Y+9,R25
    00325 8788      STD	Y+8,R24
    00326 E588      LDI	R24,0x58
    00327 E092      LDI	R25,2
    00328 839F      STD	Y+7,R25
    00329 838E      STD	Y+6,R24
    0032A 839D      STD	Y+5,R25
    0032B 838C      STD	Y+4,R24
    0032C E38E      LDI	R24,0x3E
    0032D EF9E      LDI	R25,0xFE
    0032E 839B      STD	Y+3,R25
    0032F 838A      STD	Y+2,R24
    00330 ED84      LDI	R24,0xD4
    00331 8399      STD	Y+1,R25
    00332 8388      ST	Y,R24
    00333 2722      CLR	R18
    00334 2733      CLR	R19
    00335 2700      CLR	R16
    00336 2711      CLR	R17
    00337 DDE9      RCALL	_action_set
    00338 C015      RJMP	0x034E
(0094) case 20:{action_set(0,0,-300,0,0,0,50);break;} //左回正，取消前倾可以回到3，右抬脚，或者回到0		  #####
    00339 E382      LDI	R24,0x32
    0033A E090      LDI	R25,0
    0033B 8799      STD	Y+9,R25
    0033C 8788      STD	Y+8,R24
    0033D 2422      CLR	R2
    0033E 2433      CLR	R3
    0033F 823F      STD	Y+7,R3
    00340 822E      STD	Y+6,R2
    00341 823D      STD	Y+5,R3
    00342 822C      STD	Y+4,R2
    00343 823B      STD	Y+3,R3
    00344 822A      STD	Y+2,R2
    00345 ED84      LDI	R24,0xD4
    00346 EF9E      LDI	R25,0xFE
    00347 8399      STD	Y+1,R25
    00348 8388      ST	Y,R24
    00349 2722      CLR	R18
    0034A 2733      CLR	R19
    0034B 2700      CLR	R16
    0034C 2711      CLR	R17
    0034D DDD3      RCALL	_action_set
    0034E 962A      ADIW	R28,0xA
    0034F 9159      LD	R21,Y+
    00350 9149      LD	R20,Y+
    00351 9508      RET
(0095) 
(0096) }
(0097) }
(0098) 
(0099) 
(0100) 
(0101) //=========================================================
(0102) 
(0103) //================UART=================
(0104) /***************************************************************************/
(0105) /*串口1测试程序                                          */
(0106) 
(0107) /***********************************宏定义**********************************/
(0108) 
(0109) /****************************************************************************
(0110) 函数功能:uart1初始化程序
(0111) 入口参数:
(0112) 出口参数:
(0113) ****************************************************************************/
(0114) void uart1_init(void) //USART1初始化
(0115) {
(0116)  //DDRD|=(1<<2)|(1<<3);   //  IO
(0117)  UCSR1B = 0x00;   //关闭USART1
_uart1_init:
    00352 2422      CLR	R2
    00353 9220 009A STS	0x9A,R2
(0118)  UCSR1A = 0x00;   //不适使用倍速发送
    00355 9220 009B STS	0x9B,R2
(0119)  UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);//数据位为八位
    00357 E086      LDI	R24,6
    00358 9380 009D STS	0x9D,R24
(0120)  UBRR1L=(fosc/16/(baud+1))%256;//异步正常模式下，UBRR的计算公式
    0035A E18A      LDI	R24,0x1A
    0035B 9380 0099 STS	0x99,R24
(0121)  UBRR1H=(fosc/16/(baud+1))/256;
    0035D 9220 0098 STS	0x98,R2
(0122)  UCSR1B =(1<<RXEN1)|(1<<TXEN1); //接收使能，传送使能
    0035F E188      LDI	R24,0x18
    00360 9380 009A STS	0x9A,R24
    00362 9508      RET
(0123) }
(0124) /****************************************************************************
(0125) 函数功能:uart1发送单字节数据
(0126) 入口参数:c
(0127) 出口参数:
(0128) ****************************************************************************/
(0129) void putchar1(unsigned char c)//串口1发送字符
(0130)  {  
(0131)      while (!(UCSR1A&(1<<UDRE1)));//表明发送器一准备就绪
_putchar1:
  c                    --> R16
    00363 9020 009B LDS	R2,0x9B
    00365 FE25      SBRS	R2,5
    00366 CFFC      RJMP	_putchar1
(0132)   UDR1=c;    
    00367 9300 009C STS	0x9C,R16
    00369 9508      RET
(0133)  } 
(0134)  
(0135) /****************************************************************************
(0136) 函数功能:uart1接收单字节数据
(0137) 入口参数:
(0138) 出口参数:
(0139) ****************************************************************************/
(0140) unsigned char getchar1(void) //串口1接回收数据
(0141)    {
(0142)   while(!(UCSR1A& (1<<RXC1)));
_getchar1:
    0036A 9020 009B LDS	R2,0x9B
    0036C FE27      SBRS	R2,7
    0036D CFFC      RJMP	_getchar1
(0143)      return UDR1;   //将接收到的字符返回
    0036E 9100 009C LDS	R16,0x9C
    00370 9508      RET
_puts1:
  s                    --> R20
    00371 934A      ST	-Y,R20
    00372 935A      ST	-Y,R21
    00373 01A8      MOVW	R20,R16
(0144)  } 
(0145)  
(0146) /****************************************************************************
(0147) 函数功能:uart1发送字符串数据
(0148) 入口参数:*s
(0149) 出口参数:
(0150) ****************************************************************************/    
(0151) void puts1(char *s)
(0152)  {
    00374 C005      RJMP	0x037A
(0153)  while (*s)
(0154)   {
(0155)   putchar1(*s);
    00375 01FA      MOVW	R30,R20
    00376 8100      LD	R16,Z
    00377 DFEB      RCALL	_putchar1
(0156)   s++;
    00378 5F4F      SUBI	R20,0xFF
    00379 4F5F      SBCI	R21,0xFF
    0037A 01FA      MOVW	R30,R20
    0037B 8020      LD	R2,Z
    0037C 2022      TST	R2
    0037D F7B9      BNE	0x0375
(0157)   } 
(0158)         putchar1(0x0a);//回车换行
    0037E E00A      LDI	R16,0xA
    0037F DFE3      RCALL	_putchar1
(0159)      putchar1(0x0d);
    00380 E00D      LDI	R16,0xD
    00381 DFE1      RCALL	_putchar1
    00382 9159      LD	R21,Y+
    00383 9149      LD	R20,Y+
    00384 9508      RET
(0160)  } 
(0161)  
(0162) 
(0163)    
(0164) void io_init()
(0165) {
(0166) 	DDRA=0x00;
_io_init:
    00385 2422      CLR	R2
    00386 BA2A      OUT	0x1A,R2
(0167) 	DDRB=0x00;
    00387 BA27      OUT	0x17,R2
(0168) 	DDRC=0x00;
    00388 BA24      OUT	0x14,R2
(0169) 	DDRD=0x00;
    00389 BA21      OUT	0x11,R2
(0170) 	DDRE=0x00;
    0038A B822      OUT	0x02,R2
(0171) 	DDRF=0x00;
    0038B 9220 0061 STS	0x61,R2
(0172) 	PORTA=0x00;
    0038D BA2B      OUT	0x1B,R2
(0173) 	PORTB=0x00;
    0038E BA28      OUT	0x18,R2
(0174) 	PORTC=0x00;
    0038F BA25      OUT	0x15,R2
(0175) 	PORTD=0x00;
    00390 BA22      OUT	0x12,R2
(0176) 	PORTE=0x00;
    00391 B823      OUT	0x03,R2
(0177) 	PORTF=0x00;
    00392 9220 0062 STS	0x62,R2
    00394 9508      RET
(0178) }
(0179) 
(0180) void key_init()
(0181) {
(0182) io_init();
_key_init:
    00395 DFEF      RCALL	_io_init
(0183) 	
(0184) 	DDRB=0xff;      
    00396 EF8F      LDI	R24,0xFF
    00397 BB87      OUT	0x17,R24
(0185) 	PORTB=0xff;  
    00398 BB88      OUT	0x18,R24
(0186) 	
(0187) 	DDRE=0x00;  
    00399 2422      CLR	R2
    0039A B822      OUT	0x02,R2
(0188) 	PORTE=0xF0;
    0039B EF80      LDI	R24,0xF0
    0039C B983      OUT	0x03,R24
    0039D 9508      RET
(0189) 
(0190) }
(0191)   
(0192) 
(0193) 
(0194) 
(0195) int main(){
(0196)    //unsigned char i;
(0197)      int a=0;
_main:
  a                    --> R10
    0039E 24AA      CLR	R10
    0039F 24BB      CLR	R11
(0198) 
(0199)    PWM_init();
    003A0 DD4A      RCALL	_PWM_init
(0200)    key_init();
    003A1 DFF3      RCALL	_key_init
    003A2 C045      RJMP	0x03E8
(0201)    //uart1_init();
(0202)    //puts1("HELLO!");
(0203)    while(1){
(0204)      //m3=2500;
(0205) 	 //delay(1);
(0206) 	 for(i=0;i<1000;i++)
    003A3 2422      CLR	R2
    003A4 2433      CLR	R3
    003A5 9230 020B STS	i+1,R3
    003A7 9220 020A STS	i,R2
(0207) {for(j=0;j<1000;j++)
    003A9 2422      CLR	R2
    003AA 2433      CLR	R3
    003AB 9230 0209 STS	j+1,R3
    003AD 9220 0208 STS	j,R2
(0208)   {for(k=0;k<8;k++)   //k<10,约三秒  
    003AF 2422      CLR	R2
    003B0 2433      CLR	R3
    003B1 9230 0207 STS	k+1,R3
    003B3 9220 0206 STS	k,R2
    003B5 9180 0206 LDS	R24,k
    003B7 9190 0207 LDS	R25,k+1
    003B9 9601      ADIW	R24,1
    003BA 9390 0207 STS	k+1,R25
    003BC 9380 0206 STS	k,R24
    003BE 3088      CPI	R24,0x8
    003BF E0E0      LDI	R30,0
    003C0 079E      CPC	R25,R30
    003C1 F39C      BLT	0x03B5
    003C2 9180 0208 LDS	R24,j
    003C4 9190 0209 LDS	R25,j+1
    003C6 9601      ADIW	R24,1
    003C7 9390 0209 STS	j+1,R25
    003C9 9380 0208 STS	j,R24
    003CB 3E88      CPI	R24,0xE8
    003CC E0E3      LDI	R30,3
    003CD 079E      CPC	R25,R30
    003CE F304      BLT	0x03AF
    003CF 9180 020A LDS	R24,i
    003D1 9190 020B LDS	R25,i+1
    003D3 9601      ADIW	R24,1
    003D4 9390 020B STS	i+1,R25
    003D6 9380 020A STS	i,R24
    003D8 3E88      CPI	R24,0xE8
    003D9 E0E3      LDI	R30,3
    003DA 079E      CPC	R25,R30
    003DB F26C      BLT	0x03A9
(0209)     ; 
(0210)   }
(0211)    }
(0212)     OCR1C=6000-OCR1C; 
FILE: <library>
    003DC 9020 0078 LDS	R2,0x78
    003DE 9030 0079 LDS	R3,0x79
    003E0 E780      LDI	R24,0x70
    003E1 E197      LDI	R25,0x17
    003E2 1982      SUB	R24,R2
    003E3 0993      SBC	R25,R3
    003E4 9390 0079 STS	0x79,R25
    003E6 9380 0078 STS	0x78,R24
    003E8 CFBA      RJMP	0x03A3
    003E9 9508      RET
push_xgsetF03C:
    003EA 937A      ST	-Y,R23
    003EB 936A      ST	-Y,R22
    003EC 935A      ST	-Y,R21
    003ED 934A      ST	-Y,R20
    003EE 92DA      ST	-Y,R13
    003EF 92CA      ST	-Y,R12
    003F0 92BA      ST	-Y,R11
    003F1 92AA      ST	-Y,R10
    003F2 9508      RET
pop_xgsetF03C:
    003F3 90A9      LD	R10,Y+
    003F4 90B9      LD	R11,Y+
    003F5 90C9      LD	R12,Y+
    003F6 90D9      LD	R13,Y+
    003F7 9149      LD	R20,Y+
    003F8 9159      LD	R21,Y+
    003F9 9169      LD	R22,Y+
    003FA 9179      LD	R23,Y+
    003FB 9508      RET
