Interrupt Vectors
    00000 940C 008A JMP	__start|__text_start

Program Code (text area)
__start|__text_start:
    0008A EFCF      LDI	R28,0xFF
    0008B E2D1      LDI	R29,0x21
    0008C BFCD      OUT	0x3D,R28
    0008D BFDE      OUT	0x3E,R29
    0008E 51CE      SUBI	R28,0x1E
    0008F 40D0      SBCI	R29,0
    00090 EA0A      LDI	R16,0xAA
    00091 8308      ST	Y,R16
    00092 2400      CLR	R0
    00093 E0E6      LDI	R30,6
    00094 E0F2      LDI	R31,2
    00095 E012      LDI	R17,2
    00096 30E6      CPI	R30,6
    00097 07F1      CPC	R31,R17
    00098 F011      BEQ	0x009B
    00099 9201      ST	Z+,R0
    0009A CFFB      RJMP	0x0096
    0009B 8300      ST	Z,R16
    0009C E0EE      LDI	R30,0xE
    0009D E0F1      LDI	R31,1
    0009E E0A0      LDI	R26,0
    0009F E0B2      LDI	R27,2
    000A0 E011      LDI	R17,1
    000A1 E000      LDI	R16,0
    000A2 BF0B      OUT	0x3B,R16
    000A3 31E4      CPI	R30,0x14
    000A4 07F1      CPC	R31,R17
    000A5 F021      BEQ	0x00AA
    000A6 95C8      LPM
    000A7 9631      ADIW	R30,1
    000A8 920D      ST	X+,R0
    000A9 CFF9      RJMP	0x00A3
    000AA 940E 0368 CALL	_main
_exit:
    000AC CFFF      RJMP	_exit
FILE: D:\Documents\Atmel\CAVRSA~1\ZHENGS~1\main2.c
(0001) /*======
(0002) 使用定时器1，OCR1A,OCR1B,OCR1C三个管脚同时输出PWM波形
(0003) 在快速PWM的模式下，top=0x03ff=1023
(0004) OCRnX在top时刻更新
(0005) 频率=8000000/8/1023=977.5HZ
(0006) =======================================================*/
(0007) #include<iom128v.h>
(0008) #include<string.h> 
(0009) #include <macros.h> 
(0010) #define fosc 16000000  //晶振16MHZ
(0011) #define baud 38400  //波特率
(0012) int flag=0;
(0013) int tempflag1=0;
(0014) int tempflag2=0;
(0015) 
(0016) 
(0017) void PWM_init()
(0018) {
(0019)    DDRB|=0XE0;
_PWM_init:
    000AD B387      IN	R24,0x17
    000AE 6E80      ORI	R24,0xE0
    000AF BB87      OUT	0x17,R24
(0020)    DDRE|=0X38;
    000B0 B182      IN	R24,0x02
    000B1 6388      ORI	R24,0x38
    000B2 B982      OUT	0x02,R24
(0021) TCCR1B|=(1<<WGM12)|(1<<WGM13)|(1<<CS11);
    000B3 B58E      IN	R24,0x2E
    000B4 618A      ORI	R24,0x1A
    000B5 BD8E      OUT	0x2E,R24
(0022) TCCR1A|=(1<<COM1C1)|(1<<COM1A1)|(1<<COM1B1)|(1<<WGM11);   //选通ABC                 
    000B6 B58F      IN	R24,0x2F
    000B7 6A8A      ORI	R24,0xAA
    000B8 BD8F      OUT	0x2F,R24
(0023) 	ICR1=40000;
    000B9 E480      LDI	R24,0x40
    000BA E99C      LDI	R25,0x9C
    000BB BD97      OUT	0x27,R25
    000BC BD86      OUT	0x26,R24
(0024) TCCR3B|=(1<<WGM12)|(1<<WGM13)|(1<<CS11)|(1<<CS01);
    000BD 9180 008A LDS	R24,0x8A
    000BF 618A      ORI	R24,0x1A
    000C0 9380 008A STS	0x8A,R24
(0025) TCCR3A|=(1<<COM3A1)|(1<<COM3B1)|(1<<COM3C1)|(1<<WGM11);  //选通ABC
    000C2 9180 008B LDS	R24,0x8B
    000C4 6A8A      ORI	R24,0xAA
    000C5 9380 008B STS	0x8B,R24
(0026) 	ICR3=40000;
    000C7 E480      LDI	R24,0x40
    000C8 9390 0081 STS	0x81,R25
    000CA 9380 0080 STS	0x80,R24
(0027) 	OCR1A=2000;
    000CC ED80      LDI	R24,0xD0
    000CD E097      LDI	R25,7
    000CE BD9B      OUT	0x2B,R25
    000CF BD8A      OUT	0x2A,R24
(0028) 	OCR1B=2000;
    000D0 BD99      OUT	0x29,R25
    000D1 BD88      OUT	0x28,R24
(0029) 	OCR1C=2000;
    000D2 9390 0079 STS	0x79,R25
    000D4 9380 0078 STS	0x78,R24
(0030) 	OCR3A=2000;
    000D6 9390 0087 STS	0x87,R25
    000D8 9380 0086 STS	0x86,R24
(0031) 	OCR3B=2000;
    000DA 9390 0085 STS	0x85,R25
    000DC 9380 0084 STS	0x84,R24
(0032) 	OCR3C=2000;
    000DE 9390 0083 STS	0x83,R25
    000E0 9380 0082 STS	0x82,R24
(0033) 	TCNT1=0x0000;
    000E2 2422      CLR	R2
    000E3 2433      CLR	R3
    000E4 BC3D      OUT	0x2D,R3
    000E5 BC2C      OUT	0x2C,R2
(0034) 	TCNT3=0x0000;
    000E6 9230 0089 STS	0x89,R3
    000E8 9220 0088 STS	0x88,R2
    000EA 9508      RET
_action_set:
  action_do_last       --> Y,+16
  ch_3c                --> R20
  ch_3b                --> R22
  ch_3a                --> R10
  ch_1c                --> R12
  ch_1b                --> R18
  ch_1a                --> R16
    000EB 940E 03C7 CALL	push_xgsetF03C
    000ED 84C8      LDD	R12,Y+8
    000EE 84D9      LDD	R13,Y+9
    000EF 84AA      LDD	R10,Y+10
    000F0 84BB      LDD	R11,Y+11
    000F1 856C      LDD	R22,Y+12
    000F2 857D      LDD	R23,Y+13
    000F3 854E      LDD	R20,Y+14
    000F4 855F      LDD	R21,Y+15
(0035) }
(0036) 
(0037) void action_set(int ch_1a, int ch_1b, int ch_1c, int ch_3a, int ch_3b, int ch_3c, int action_do_last)
(0038) {
(0039)     OCR1A=ch_1a+3000;
    000F5 01C8      MOVW	R24,R16
    000F6 5488      SUBI	R24,0x48
    000F7 4F94      SBCI	R25,0xF4
    000F8 BD9B      OUT	0x2B,R25
    000F9 BD8A      OUT	0x2A,R24
(0040) 	OCR1B=ch_1b+3000;
    000FA 01C9      MOVW	R24,R18
    000FB 5488      SUBI	R24,0x48
    000FC 4F94      SBCI	R25,0xF4
    000FD BD99      OUT	0x29,R25
    000FE BD88      OUT	0x28,R24
(0041) 	OCR1C=ch_1c+3000;
    000FF 01C6      MOVW	R24,R12
    00100 5488      SUBI	R24,0x48
    00101 4F94      SBCI	R25,0xF4
    00102 9390 0079 STS	0x79,R25
    00104 9380 0078 STS	0x78,R24
(0042) 	OCR3A=ch_3a+3000;
    00106 01C5      MOVW	R24,R10
    00107 5488      SUBI	R24,0x48
    00108 4F94      SBCI	R25,0xF4
    00109 9390 0087 STS	0x87,R25
    0010B 9380 0086 STS	0x86,R24
(0043) 	OCR3B=ch_3b+3000;
    0010D 01CB      MOVW	R24,R22
    0010E 5488      SUBI	R24,0x48
    0010F 4F94      SBCI	R25,0xF4
    00110 9390 0085 STS	0x85,R25
    00112 9380 0084 STS	0x84,R24
(0044) 	OCR3C=ch_3c+3000;
    00114 01CA      MOVW	R24,R20
    00115 5488      SUBI	R24,0x48
    00116 4F94      SBCI	R25,0xF4
    00117 9390 0083 STS	0x83,R25
    00119 9380 0082 STS	0x82,R24
    0011B 940C 03D0 JMP	pop_xgsetF03C
_action_base:
  number               --> R20
    0011D 934A      ST	-Y,R20
    0011E 935A      ST	-Y,R21
    0011F 01A8      MOVW	R20,R16
    00120 972A      SBIW	R28,0xA
(0045) }
(0046) 
(0047) void action_base(int number)
(0048) { switch(number)
    00121 3040      CPI	R20,0
    00122 E0E0      LDI	R30,0
    00123 075E      CPC	R21,R30
    00124 F40C      BGE	0x0126
    00125 C1F2      RJMP	0x0318
    00126 E184      LDI	R24,0x14
    00127 E090      LDI	R25,0
    00128 1784      CP	R24,R20
    00129 0795      CPC	R25,R21
    0012A F40C      BGE	0x012C
    0012B C1EC      RJMP	0x0318
    0012C EE84      LDI	R24,0xE4
    0012D E090      LDI	R25,0
    0012E 01FA      MOVW	R30,R20
    0012F 0FEE      LSL	R30
    00130 1FFF      ROL	R31
    00131 0FE8      ADD	R30,R24
    00132 1FF9      ADC	R31,R25
    00133 9027      ELPM	R2,Z+
    00134 9036      ELPM	R3,Z
    00135 01F1      MOVW	R30,R2
    00136 9409      IJMP
(0049) {
(0050) case 0:{action_set(0,0,0,0,0,0,100);break;} //直立
    00137 E684      LDI	R24,0x64
    00138 E090      LDI	R25,0
    00139 8799      STD	Y+9,R25
    0013A 8788      STD	Y+8,R24
    0013B 2422      CLR	R2
    0013C 2433      CLR	R3
    0013D 823F      STD	Y+7,R3
    0013E 822E      STD	Y+6,R2
    0013F 823D      STD	Y+5,R3
    00140 822C      STD	Y+4,R2
    00141 823B      STD	Y+3,R3
    00142 822A      STD	Y+2,R2
    00143 8239      STD	Y+1,R3
    00144 8228      ST	Y,R2
    00145 2722      CLR	R18
    00146 2733      CLR	R19
    00147 2700      CLR	R16
    00148 2711      CLR	R17
    00149 DFA1      RCALL	_action_set
    0014A C1CD      RJMP	0x0318
(0051) //case 1:{action_set(0,0,-200,700,0,0,50);break;} //右脚左倾											   #####
(0052) case 1:{action_set(0,0,-750,1200,0,0,40);break;} //左脚左倾	  			-300/-400						#####
    0014B E288      LDI	R24,0x28
    0014C E090      LDI	R25,0
    0014D 8799      STD	Y+9,R25
    0014E 8788      STD	Y+8,R24
    0014F 2422      CLR	R2
    00150 2433      CLR	R3
    00151 823F      STD	Y+7,R3
    00152 822E      STD	Y+6,R2
    00153 823D      STD	Y+5,R3
    00154 822C      STD	Y+4,R2
    00155 EB80      LDI	R24,0xB0
    00156 E094      LDI	R25,4
    00157 839B      STD	Y+3,R25
    00158 838A      STD	Y+2,R24
    00159 E182      LDI	R24,0x12
    0015A EF9D      LDI	R25,0xFD
    0015B 8399      STD	Y+1,R25
    0015C 8388      ST	Y,R24
    0015D 2722      CLR	R18
    0015E 2733      CLR	R19
    0015F 2700      CLR	R16
    00160 2711      CLR	R17
    00161 DF89      RCALL	_action_set
    00162 C1B5      RJMP	0x0318
(0053) case 2:{action_set(0,0,-600,0,1200,1200,100);break;} //右抬脚，同时右脚放平							 #####
    00163 E684      LDI	R24,0x64
    00164 E090      LDI	R25,0
    00165 8799      STD	Y+9,R25
    00166 8788      STD	Y+8,R24
    00167 EB80      LDI	R24,0xB0
    00168 E094      LDI	R25,4
    00169 839F      STD	Y+7,R25
    0016A 838E      STD	Y+6,R24
    0016B 839D      STD	Y+5,R25
    0016C 838C      STD	Y+4,R24
    0016D 2422      CLR	R2
    0016E 2433      CLR	R3
    0016F 823B      STD	Y+3,R3
    00170 822A      STD	Y+2,R2
    00171 EA88      LDI	R24,0xA8
    00172 EF9D      LDI	R25,0xFD
    00173 8399      STD	Y+1,R25
    00174 8388      ST	Y,R24
    00175 2722      CLR	R18
    00176 2733      CLR	R19
    00177 2700      CLR	R16
    00178 2711      CLR	R17
    00179 DF71      RCALL	_action_set
    0017A C19D      RJMP	0x0318
(0054) //case 4:{action_set(700,700,-350,-400,700,700,50);break;} //左弯脚 3,4可以一起完成
(0055) //case 5:{action_set(700,700,0,0,700,700,50);break;} //转正	
(0056) case 3:{action_set(300,600,0,0,600,900,75);break;} //前倾，1号舵机-500，6号舵机+500，把重心转移到前脚上#####
    0017B E48B      LDI	R24,0x4B
    0017C E090      LDI	R25,0
    0017D 8799      STD	Y+9,R25
    0017E 8788      STD	Y+8,R24
    0017F E884      LDI	R24,0x84
    00180 E093      LDI	R25,3
    00181 839F      STD	Y+7,R25
    00182 838E      STD	Y+6,R24
    00183 E588      LDI	R24,0x58
    00184 E092      LDI	R25,2
    00185 839D      STD	Y+5,R25
    00186 838C      STD	Y+4,R24
    00187 2422      CLR	R2
    00188 2433      CLR	R3
    00189 823B      STD	Y+3,R3
    0018A 822A      STD	Y+2,R2
    0018B 8239      STD	Y+1,R3
    0018C 8228      ST	Y,R2
    0018D E528      LDI	R18,0x58
    0018E E032      LDI	R19,2
    0018F E20C      LDI	R16,0x2C
    00190 E011      LDI	R17,1
    00191 DF59      RCALL	_action_set
    00192 C185      RJMP	0x0318
(0057) case 4:{action_set(300,600,450,350,600,900,50);break;} //左脚右倾	 	前倾								  #####
    00193 E382      LDI	R24,0x32
    00194 E090      LDI	R25,0
    00195 8799      STD	Y+9,R25
    00196 8788      STD	Y+8,R24
    00197 E884      LDI	R24,0x84
    00198 E093      LDI	R25,3
    00199 839F      STD	Y+7,R25
    0019A 838E      STD	Y+6,R24
    0019B E588      LDI	R24,0x58
    0019C E092      LDI	R25,2
    0019D 839D      STD	Y+5,R25
    0019E 838C      STD	Y+4,R24
    0019F E58E      LDI	R24,0x5E
    001A0 E091      LDI	R25,1
    001A1 839B      STD	Y+3,R25
    001A2 838A      STD	Y+2,R24
    001A3 EC82      LDI	R24,0xC2
    001A4 8399      STD	Y+1,R25
    001A5 8388      ST	Y,R24
    001A6 E528      LDI	R18,0x58
    001A7 E032      LDI	R19,2
    001A8 E20C      LDI	R16,0x2C
    001A9 E011      LDI	R17,1
    001AA DF40      RCALL	_action_set
    001AB C16C      RJMP	0x0318
(0058) //case 8:{action_set(400,700,-750,300,700,1000,50);break;} //右脚右倾，度数还得减小	 
(0059) case 5:{action_set(300,600,0,300,0,300,50);break;} //右脚立正  ，前倾
    001AC E382      LDI	R24,0x32
    001AD E090      LDI	R25,0
    001AE 8799      STD	Y+9,R25
    001AF 8788      STD	Y+8,R24
    001B0 E28C      LDI	R24,0x2C
    001B1 E091      LDI	R25,1
    001B2 839F      STD	Y+7,R25
    001B3 838E      STD	Y+6,R24
    001B4 2422      CLR	R2
    001B5 2433      CLR	R3
    001B6 823D      STD	Y+5,R3
    001B7 822C      STD	Y+4,R2
    001B8 839B      STD	Y+3,R25
    001B9 838A      STD	Y+2,R24
    001BA 8239      STD	Y+1,R3
    001BB 8228      ST	Y,R2
    001BC E528      LDI	R18,0x58
    001BD E032      LDI	R19,2
    001BE E20C      LDI	R16,0x2C
    001BF E011      LDI	R17,1
    001C0 DF2A      RCALL	_action_set
    001C1 C156      RJMP	0x0318
(0060) case 6:{action_set(0,0,0,300,0,0,25);break;} //左脚回正	 	同时，左脚放平，取消前倾			   #####
    001C2 E189      LDI	R24,0x19
    001C3 E090      LDI	R25,0
    001C4 8799      STD	Y+9,R25
    001C5 8788      STD	Y+8,R24
    001C6 2422      CLR	R2
    001C7 2433      CLR	R3
    001C8 823F      STD	Y+7,R3
    001C9 822E      STD	Y+6,R2
    001CA 823D      STD	Y+5,R3
    001CB 822C      STD	Y+4,R2
    001CC E28C      LDI	R24,0x2C
    001CD E091      LDI	R25,1
    001CE 839B      STD	Y+3,R25
    001CF 838A      STD	Y+2,R24
    001D0 8239      STD	Y+1,R3
    001D1 8228      ST	Y,R2
    001D2 2722      CLR	R18
    001D3 2733      CLR	R19
    001D4 2700      CLR	R16
    001D5 2711      CLR	R17
    001D6 DF14      RCALL	_action_set
    001D7 C140      RJMP	0x0318
(0061) case 7:{action_set(-600,-600,0,300,0,0,25);break;} //左抬脚										   #####
    001D8 E189      LDI	R24,0x19
    001D9 E090      LDI	R25,0
    001DA 8799      STD	Y+9,R25
    001DB 8788      STD	Y+8,R24
    001DC 2422      CLR	R2
    001DD 2433      CLR	R3
    001DE 823F      STD	Y+7,R3
    001DF 822E      STD	Y+6,R2
    001E0 823D      STD	Y+5,R3
    001E1 822C      STD	Y+4,R2
    001E2 E28C      LDI	R24,0x2C
    001E3 E091      LDI	R25,1
    001E4 839B      STD	Y+3,R25
    001E5 838A      STD	Y+2,R24
    001E6 8239      STD	Y+1,R3
    001E7 8228      ST	Y,R2
    001E8 EA28      LDI	R18,0xA8
    001E9 EF3D      LDI	R19,0xFD
    001EA EA08      LDI	R16,0xA8
    001EB EF1D      LDI	R17,0xFD
    001EC DEFE      RCALL	_action_set
    001ED C12A      RJMP	0x0318
(0062) //case 12:{action_set(-700,-700,400,300,-700,-700,50);break;} //右弯脚	11,12可以一起完成 ，前脚未着地
(0063) //case 13:{action_set(-700,-700,0,0,-700,-700,50);break;} //右转正 
(0064) case 8:{action_set(-600,-400,0,0,-400,-600,75);break;} //前倾，1号舵机-500，6号舵机+500，把重心转移到前脚上，左脚稍弯##### 
    001EE E48B      LDI	R24,0x4B
    001EF E090      LDI	R25,0
    001F0 8799      STD	Y+9,R25
    001F1 8788      STD	Y+8,R24
    001F2 EA88      LDI	R24,0xA8
    001F3 EF9D      LDI	R25,0xFD
    001F4 839F      STD	Y+7,R25
    001F5 838E      STD	Y+6,R24
    001F6 E780      LDI	R24,0x70
    001F7 EF9E      LDI	R25,0xFE
    001F8 839D      STD	Y+5,R25
    001F9 838C      STD	Y+4,R24
    001FA 2422      CLR	R2
    001FB 2433      CLR	R3
    001FC 823B      STD	Y+3,R3
    001FD 822A      STD	Y+2,R2
    001FE 8239      STD	Y+1,R3
    001FF 8228      ST	Y,R2
    00200 E720      LDI	R18,0x70
    00201 EF3E      LDI	R19,0xFE
    00202 EA08      LDI	R16,0xA8
    00203 EF1D      LDI	R17,0xFD
    00204 DEE6      RCALL	_action_set
    00205 C112      RJMP	0x0318
(0065) case 9:{action_set(-600,-400,-350,-450,-400,-600,50);break;} //右脚左倾   	前倾								#####
    00206 E382      LDI	R24,0x32
    00207 E090      LDI	R25,0
    00208 8799      STD	Y+9,R25
    00209 8788      STD	Y+8,R24
    0020A EA88      LDI	R24,0xA8
    0020B EF9D      LDI	R25,0xFD
    0020C 839F      STD	Y+7,R25
    0020D 838E      STD	Y+6,R24
    0020E E780      LDI	R24,0x70
    0020F EF9E      LDI	R25,0xFE
    00210 839D      STD	Y+5,R25
    00211 838C      STD	Y+4,R24
    00212 E38E      LDI	R24,0x3E
    00213 839B      STD	Y+3,R25
    00214 838A      STD	Y+2,R24
    00215 EA82      LDI	R24,0xA2
    00216 8399      STD	Y+1,R25
    00217 8388      ST	Y,R24
    00218 E720      LDI	R18,0x70
    00219 EF3E      LDI	R19,0xFE
    0021A EA08      LDI	R16,0xA8
    0021B EF1D      LDI	R17,0xFD
    0021C DECE      RCALL	_action_set
    0021D C0FA      RJMP	0x0318
(0066) //case 16:{action_set(-1000,-700,-250,-350,-700,-400,50);break;} //左脚左倾   
(0067) case 10:{action_set(0,0,-300,-450,-600,-600,50);break;} //左立正，前倾
    0021E E382      LDI	R24,0x32
    0021F E090      LDI	R25,0
    00220 8799      STD	Y+9,R25
    00221 8788      STD	Y+8,R24
    00222 EA88      LDI	R24,0xA8
    00223 EF9D      LDI	R25,0xFD
    00224 839F      STD	Y+7,R25
    00225 838E      STD	Y+6,R24
    00226 839D      STD	Y+5,R25
    00227 838C      STD	Y+4,R24
    00228 E38E      LDI	R24,0x3E
    00229 EF9E      LDI	R25,0xFE
    0022A 839B      STD	Y+3,R25
    0022B 838A      STD	Y+2,R24
    0022C ED84      LDI	R24,0xD4
    0022D 8399      STD	Y+1,R25
    0022E 8388      ST	Y,R24
    0022F 2722      CLR	R18
    00230 2733      CLR	R19
    00231 2700      CLR	R16
    00232 2711      CLR	R17
    00233 DEB7      RCALL	_action_set
    00234 C0E3      RJMP	0x0318
(0068) //case 10:{action_set(0,0,-300,0,0,0,75);break;} //右回正，取消前倾可以回到3，右抬脚，或者回到0		  #####
(0069) 
(0070) case 11:{action_set(0,0,-300,0,-600,-800,50);break;} //右后抬脚，同时右脚放平							 #####
    00235 E382      LDI	R24,0x32
    00236 E090      LDI	R25,0
    00237 8799      STD	Y+9,R25
    00238 8788      STD	Y+8,R24
    00239 EE80      LDI	R24,0xE0
    0023A EF9C      LDI	R25,0xFC
    0023B 839F      STD	Y+7,R25
    0023C 838E      STD	Y+6,R24
    0023D EA88      LDI	R24,0xA8
    0023E EF9D      LDI	R25,0xFD
    0023F 839D      STD	Y+5,R25
    00240 838C      STD	Y+4,R24
    00241 2422      CLR	R2
    00242 2433      CLR	R3
    00243 823B      STD	Y+3,R3
    00244 822A      STD	Y+2,R2
    00245 ED84      LDI	R24,0xD4
    00246 EF9E      LDI	R25,0xFE
    00247 8399      STD	Y+1,R25
    00248 8388      ST	Y,R24
    00249 2722      CLR	R18
    0024A 2733      CLR	R19
    0024B 2700      CLR	R16
    0024C 2711      CLR	R17
    0024D DE9D      RCALL	_action_set
    0024E C0C9      RJMP	0x0318
(0071) case 12:{action_set(-750,-400,0,0,-400,-750,75);break;} //后倾，1号舵机+500，6号舵机-500，重心转移到后脚，右脚稍弯#####
    0024F E48B      LDI	R24,0x4B
    00250 E090      LDI	R25,0
    00251 8799      STD	Y+9,R25
    00252 8788      STD	Y+8,R24
    00253 E182      LDI	R24,0x12
    00254 EF9D      LDI	R25,0xFD
    00255 839F      STD	Y+7,R25
    00256 838E      STD	Y+6,R24
    00257 E780      LDI	R24,0x70
    00258 EF9E      LDI	R25,0xFE
    00259 839D      STD	Y+5,R25
    0025A 838C      STD	Y+4,R24
    0025B 2422      CLR	R2
    0025C 2433      CLR	R3
    0025D 823B      STD	Y+3,R3
    0025E 822A      STD	Y+2,R2
    0025F 8239      STD	Y+1,R3
    00260 8228      ST	Y,R2
    00261 E720      LDI	R18,0x70
    00262 EF3E      LDI	R19,0xFE
    00263 E102      LDI	R16,0x12
    00264 EF1D      LDI	R17,0xFD
    00265 DE85      RCALL	_action_set
    00266 C0B1      RJMP	0x0318
(0072) case 13:{action_set(-750,-400,400,300,-400,-750,50);break;} //脚右倾	 	
    00267 E382      LDI	R24,0x32
    00268 E090      LDI	R25,0
    00269 8799      STD	Y+9,R25
    0026A 8788      STD	Y+8,R24
    0026B E182      LDI	R24,0x12
    0026C EF9D      LDI	R25,0xFD
    0026D 839F      STD	Y+7,R25
    0026E 838E      STD	Y+6,R24
    0026F E780      LDI	R24,0x70
    00270 EF9E      LDI	R25,0xFE
    00271 839D      STD	Y+5,R25
    00272 838C      STD	Y+4,R24
    00273 E28C      LDI	R24,0x2C
    00274 E091      LDI	R25,1
    00275 839B      STD	Y+3,R25
    00276 838A      STD	Y+2,R24
    00277 E980      LDI	R24,0x90
    00278 8399      STD	Y+1,R25
    00279 8388      ST	Y,R24
    0027A E720      LDI	R18,0x70
    0027B EF3E      LDI	R19,0xFE
    0027C E102      LDI	R16,0x12
    0027D EF1D      LDI	R17,0xFD
    0027E DE6C      RCALL	_action_set
    0027F C098      RJMP	0x0318
(0073) case 14:{action_set(-750,-600,0,250,0,0,50);break;} //右脚回正	 	同时，左脚放平，取消前倾			   #####								  #####
    00280 E382      LDI	R24,0x32
    00281 E090      LDI	R25,0
    00282 8799      STD	Y+9,R25
    00283 8788      STD	Y+8,R24
    00284 2422      CLR	R2
    00285 2433      CLR	R3
    00286 823F      STD	Y+7,R3
    00287 822E      STD	Y+6,R2
    00288 823D      STD	Y+5,R3
    00289 822C      STD	Y+4,R2
    0028A EF8A      LDI	R24,0xFA
    0028B 839B      STD	Y+3,R25
    0028C 838A      STD	Y+2,R24
    0028D 8239      STD	Y+1,R3
    0028E 8228      ST	Y,R2
    0028F EA28      LDI	R18,0xA8
    00290 EF3D      LDI	R19,0xFD
    00291 E102      LDI	R16,0x12
    00292 EF1D      LDI	R17,0xFD
    00293 DE57      RCALL	_action_set
    00294 C083      RJMP	0x0318
(0074) case 15:{action_set(0,0,0,250,0,0,40);break;} //右脚回正	 	同时，左脚放平，取消前倾			   #####
    00295 E288      LDI	R24,0x28
    00296 E090      LDI	R25,0
    00297 8799      STD	Y+9,R25
    00298 8788      STD	Y+8,R24
    00299 2422      CLR	R2
    0029A 2433      CLR	R3
    0029B 823F      STD	Y+7,R3
    0029C 822E      STD	Y+6,R2
    0029D 823D      STD	Y+5,R3
    0029E 822C      STD	Y+4,R2
    0029F EF8A      LDI	R24,0xFA
    002A0 839B      STD	Y+3,R25
    002A1 838A      STD	Y+2,R24
    002A2 8239      STD	Y+1,R3
    002A3 8228      ST	Y,R2
    002A4 2722      CLR	R18
    002A5 2733      CLR	R19
    002A6 2700      CLR	R16
    002A7 2711      CLR	R17
    002A8 DE42      RCALL	_action_set
    002A9 C06E      RJMP	0x0318
(0075) case 16:{action_set(600,600,0,250,0,0,40);break;} //左后抬脚										   #####
    002AA E288      LDI	R24,0x28
    002AB E090      LDI	R25,0
    002AC 8799      STD	Y+9,R25
    002AD 8788      STD	Y+8,R24
    002AE 2422      CLR	R2
    002AF 2433      CLR	R3
    002B0 823F      STD	Y+7,R3
    002B1 822E      STD	Y+6,R2
    002B2 823D      STD	Y+5,R3
    002B3 822C      STD	Y+4,R2
    002B4 EF8A      LDI	R24,0xFA
    002B5 839B      STD	Y+3,R25
    002B6 838A      STD	Y+2,R24
    002B7 8239      STD	Y+1,R3
    002B8 8228      ST	Y,R2
    002B9 E528      LDI	R18,0x58
    002BA E032      LDI	R19,2
    002BB E508      LDI	R16,0x58
    002BC E012      LDI	R17,2
    002BD DE2D      RCALL	_action_set
    002BE C059      RJMP	0x0318
(0076) case 17:{action_set(600,600,0,0,600,600,50);break;} //后倾，1号舵机+500，6号舵机-500，把重心转移到前脚上##### 
    002BF E382      LDI	R24,0x32
    002C0 E090      LDI	R25,0
    002C1 8799      STD	Y+9,R25
    002C2 8788      STD	Y+8,R24
    002C3 E588      LDI	R24,0x58
    002C4 E092      LDI	R25,2
    002C5 839F      STD	Y+7,R25
    002C6 838E      STD	Y+6,R24
    002C7 839D      STD	Y+5,R25
    002C8 838C      STD	Y+4,R24
    002C9 2422      CLR	R2
    002CA 2433      CLR	R3
    002CB 823B      STD	Y+3,R3
    002CC 822A      STD	Y+2,R2
    002CD 8239      STD	Y+1,R3
    002CE 8228      ST	Y,R2
    002CF E528      LDI	R18,0x58
    002D0 E032      LDI	R19,2
    002D1 E508      LDI	R16,0x58
    002D2 E012      LDI	R17,2
    002D3 DE17      RCALL	_action_set
    002D4 C043      RJMP	0x0318
(0077) case 18:{action_set(600,600,-350,-450,600,600,50);break;} //脚左倾   									#####
    002D5 E382      LDI	R24,0x32
    002D6 E090      LDI	R25,0
    002D7 8799      STD	Y+9,R25
    002D8 8788      STD	Y+8,R24
    002D9 E588      LDI	R24,0x58
    002DA E092      LDI	R25,2
    002DB 839F      STD	Y+7,R25
    002DC 838E      STD	Y+6,R24
    002DD 839D      STD	Y+5,R25
    002DE 838C      STD	Y+4,R24
    002DF E38E      LDI	R24,0x3E
    002E0 EF9E      LDI	R25,0xFE
    002E1 839B      STD	Y+3,R25
    002E2 838A      STD	Y+2,R24
    002E3 EA82      LDI	R24,0xA2
    002E4 8399      STD	Y+1,R25
    002E5 8388      ST	Y,R24
    002E6 E528      LDI	R18,0x58
    002E7 E032      LDI	R19,2
    002E8 E508      LDI	R16,0x58
    002E9 E012      LDI	R17,2
    002EA DE00      RCALL	_action_set
    002EB C02C      RJMP	0x0318
(0078) case 19:{action_set(0,0,-300,-450,600,600,50);break;} //脚左倾   									#####
    002EC E382      LDI	R24,0x32
    002ED E090      LDI	R25,0
    002EE 8799      STD	Y+9,R25
    002EF 8788      STD	Y+8,R24
    002F0 E588      LDI	R24,0x58
    002F1 E092      LDI	R25,2
    002F2 839F      STD	Y+7,R25
    002F3 838E      STD	Y+6,R24
    002F4 839D      STD	Y+5,R25
    002F5 838C      STD	Y+4,R24
    002F6 E38E      LDI	R24,0x3E
    002F7 EF9E      LDI	R25,0xFE
    002F8 839B      STD	Y+3,R25
    002F9 838A      STD	Y+2,R24
    002FA ED84      LDI	R24,0xD4
    002FB 8399      STD	Y+1,R25
    002FC 8388      ST	Y,R24
    002FD 2722      CLR	R18
    002FE 2733      CLR	R19
    002FF 2700      CLR	R16
    00300 2711      CLR	R17
    00301 DDE9      RCALL	_action_set
    00302 C015      RJMP	0x0318
(0079) case 20:{action_set(0,0,-300,0,0,0,50);break;} //左回正，取消前倾可以回到3，右抬脚，或者回到0		  #####
    00303 E382      LDI	R24,0x32
    00304 E090      LDI	R25,0
    00305 8799      STD	Y+9,R25
    00306 8788      STD	Y+8,R24
    00307 2422      CLR	R2
    00308 2433      CLR	R3
    00309 823F      STD	Y+7,R3
    0030A 822E      STD	Y+6,R2
    0030B 823D      STD	Y+5,R3
    0030C 822C      STD	Y+4,R2
    0030D 823B      STD	Y+3,R3
    0030E 822A      STD	Y+2,R2
    0030F ED84      LDI	R24,0xD4
    00310 EF9E      LDI	R25,0xFE
    00311 8399      STD	Y+1,R25
    00312 8388      ST	Y,R24
    00313 2722      CLR	R18
    00314 2733      CLR	R19
    00315 2700      CLR	R16
    00316 2711      CLR	R17
    00317 DDD3      RCALL	_action_set
    00318 962A      ADIW	R28,0xA
    00319 9159      LD	R21,Y+
    0031A 9149      LD	R20,Y+
    0031B 9508      RET
(0080) 
(0081) }
(0082) }
(0083) 
(0084) 
(0085) 
(0086) //=========================================================
(0087) 
(0088) //================UART=================
(0089) /***************************************************************************/
(0090) /*串口1测试程序                                          */
(0091) 
(0092) /***********************************宏定义**********************************/
(0093) 
(0094) /****************************************************************************
(0095) 函数功能:uart1初始化程序
(0096) 入口参数:
(0097) 出口参数:
(0098) ****************************************************************************/
(0099) void uart1_init(void) //USART1初始化
(0100) {
(0101)  //DDRD|=(1<<2)|(1<<3);   //  IO
(0102)  UCSR1B = 0x00;   //关闭USART1
_uart1_init:
    0031C 2422      CLR	R2
    0031D 9220 009A STS	0x9A,R2
(0103)  UCSR1A = 0x00;   //不适使用倍速发送
    0031F 9220 009B STS	0x9B,R2
(0104)  UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);//数据位为八位
    00321 E086      LDI	R24,6
    00322 9380 009D STS	0x9D,R24
(0105)  UBRR1L=(fosc/16/(baud+1))%256;//异步正常模式下，UBRR的计算公式
    00324 E18A      LDI	R24,0x1A
    00325 9380 0099 STS	0x99,R24
(0106)  UBRR1H=(fosc/16/(baud+1))/256;
    00327 9220 0098 STS	0x98,R2
(0107)  UCSR1B =(1<<RXEN1)|(1<<TXEN1); //接收使能，传送使能
    00329 E188      LDI	R24,0x18
    0032A 9380 009A STS	0x9A,R24
    0032C 9508      RET
(0108) }
(0109) /****************************************************************************
(0110) 函数功能:uart1发送单字节数据
(0111) 入口参数:c
(0112) 出口参数:
(0113) ****************************************************************************/
(0114) void putchar1(unsigned char c)//串口1发送字符
(0115)  {  
(0116)      while (!(UCSR1A&(1<<UDRE1)));//表明发送器一准备就绪
_putchar1:
  c                    --> R16
    0032D 9020 009B LDS	R2,0x9B
    0032F FE25      SBRS	R2,5
    00330 CFFC      RJMP	_putchar1
(0117)   UDR1=c;    
    00331 9300 009C STS	0x9C,R16
    00333 9508      RET
(0118)  } 
(0119)  
(0120) /****************************************************************************
(0121) 函数功能:uart1接收单字节数据
(0122) 入口参数:
(0123) 出口参数:
(0124) ****************************************************************************/
(0125) unsigned char getchar1(void) //串口1接回收数据
(0126)    {
(0127)   while(!(UCSR1A& (1<<RXC1)));
_getchar1:
    00334 9020 009B LDS	R2,0x9B
    00336 FE27      SBRS	R2,7
    00337 CFFC      RJMP	_getchar1
(0128)      return UDR1;   //将接收到的字符返回
    00338 9100 009C LDS	R16,0x9C
    0033A 9508      RET
_puts1:
  s                    --> R20
    0033B 934A      ST	-Y,R20
    0033C 935A      ST	-Y,R21
    0033D 01A8      MOVW	R20,R16
(0129)  } 
(0130)  
(0131) /****************************************************************************
(0132) 函数功能:uart1发送字符串数据
(0133) 入口参数:*s
(0134) 出口参数:
(0135) ****************************************************************************/    
(0136) void puts1(char *s)
(0137)  {
    0033E C005      RJMP	0x0344
(0138)  while (*s)
(0139)   {
(0140)   putchar1(*s);
    0033F 01FA      MOVW	R30,R20
    00340 8100      LD	R16,Z
    00341 DFEB      RCALL	_putchar1
(0141)   s++;
    00342 5F4F      SUBI	R20,0xFF
    00343 4F5F      SBCI	R21,0xFF
    00344 01FA      MOVW	R30,R20
    00345 8020      LD	R2,Z
    00346 2022      TST	R2
    00347 F7B9      BNE	0x033F
(0142)   } 
(0143)         putchar1(0x0a);//回车换行
    00348 E00A      LDI	R16,0xA
    00349 DFE3      RCALL	_putchar1
(0144)      putchar1(0x0d);
    0034A E00D      LDI	R16,0xD
    0034B DFE1      RCALL	_putchar1
    0034C 9159      LD	R21,Y+
    0034D 9149      LD	R20,Y+
    0034E 9508      RET
(0145)  } 
(0146)  
(0147) /****************************************************************************
(0148) 函数功能:
(0149) 入口参数:
(0150) 出口参数:
(0151) ****************************************************************************/
(0152) /*void main(void)
(0153) {
(0154)  unsigned char i;
(0155)   uart1_init();
(0156)   puts1("HELLO!");
(0157)  while(1)
(0158)     {    
(0159)         puts1("test ok!");        
(0160)  }
(0161) } 
(0162) */
(0163) 
(0164) //======================================================
(0165) 
(0166) /*
(0167) void  Pwm1A_Init(void)
(0168) 
(0169) {
(0170) DDRB|=0XE0;
(0171) DDRE|=0X38;
(0172) //DDRB|=BIT(PB7);
(0173) TCCR1B|=(1<<WGM12)|(1<<WGM13)|(1<<CS11);
(0174) TCCR1A|=(1<<COM1C1)|(1<<WGM11);
(0175) ICR1=Period;
(0176) OCR1C=0x0200;
(0177) TCNT1=0x0000;
(0178) } 
(0179) 
(0180) void  Pwm1B_Init(void)
(0181) 
(0182) {
(0183) 
(0184) //DDRB|=BIT(PB7);
(0185) TCCR1B|=(1<<WGM12)|(1<<WGM13)|(1<<CS11);
(0186) TCCR1A|=(1<<COM1C1)|(1<<WGM11);
(0187) ICR1=Period;
(0188) OCR1C=0x0200;
(0189) TCNT1=0x0000;
(0190) } 
(0191) 
(0192) void  Pwm1C_Init(void)
(0193) 
(0194) {
(0195) 
(0196) //DDRB|=BIT(PB7);
(0197) TCCR1B|=(1<<WGM12)|(1<<WGM13)|(1<<CS11);
(0198) TCCR1A|=(1<<COM1C1)|(1<<WGM11);
(0199) ICR1=Period;
(0200) OCR1C=0x0200;
(0201) TCNT1=0x0000;
(0202) } 
(0203) 
(0204) void  Pwm3A_Init(void)
(0205) {
(0206) //DDRE|=BIT(PE3);
(0207) TCCR3B|=(1<<WGM12)|(1<<WGM13)|(1<<CS11)|(1<<CS01);
(0208) TCCR3A|=(1<<COM3A1)|(1<<WGM11);
(0209) ICR3=Period;
(0210) OCR3A=0x0400;
(0211) TCNT3=0x0000;
(0212) }
(0213)  
(0214) void  Pwm3B_Init(void)
(0215) {
(0216) //DDRE|=BIT(PE4);
(0217) TCCR3B|=(1<<WGM12)|(1<<WGM13)|(1<<CS11)|(1<<CS01);
(0218) TCCR3A|=(1<<COM3B1)|(1<<WGM11);
(0219) ICR3=Period;
(0220) OCR3A=0x0400;
(0221) TCNT3=0x0000;
(0222) } 
(0223) 
(0224) void  Pwm3C_Init(void)
(0225) {
(0226) //DDRE|=BIT(PE4);
(0227) TCCR3B|=(1<<WGM12)|(1<<WGM13)|(1<<CS11)|(1<<CS01);
(0228) TCCR3A|=(1<<COM3B1)|(1<<WGM11);
(0229) ICR3=Period;
(0230) OCR3A=0x0400;
(0231) TCNT3=0x0000;
(0232) } 
(0233)    */
(0234)    
(0235) void io_init()
(0236) {
(0237) 	DDRA=0x00;
_io_init:
    0034F 2422      CLR	R2
    00350 BA2A      OUT	0x1A,R2
(0238) 	DDRB=0x00;
    00351 BA27      OUT	0x17,R2
(0239) 	DDRC=0x00;
    00352 BA24      OUT	0x14,R2
(0240) 	DDRD=0x00;
    00353 BA21      OUT	0x11,R2
(0241) 	DDRE=0x00;
    00354 B822      OUT	0x02,R2
(0242) 	DDRF=0x00;
    00355 9220 0061 STS	0x61,R2
(0243) 	PORTA=0x00;
    00357 BA2B      OUT	0x1B,R2
(0244) 	PORTB=0x00;
    00358 BA28      OUT	0x18,R2
(0245) 	PORTC=0x00;
    00359 BA25      OUT	0x15,R2
(0246) 	PORTD=0x00;
    0035A BA22      OUT	0x12,R2
(0247) 	PORTE=0x00;
    0035B B823      OUT	0x03,R2
(0248) 	PORTF=0x00;
    0035C 9220 0062 STS	0x62,R2
    0035E 9508      RET
(0249) }
(0250) 
(0251) void key_init()
(0252) {
(0253) io_init();
_key_init:
    0035F DFEF      RCALL	_io_init
(0254) 	
(0255) 	DDRB=0xff;      
    00360 EF8F      LDI	R24,0xFF
    00361 BB87      OUT	0x17,R24
(0256) 	PORTB=0xff;  
    00362 BB88      OUT	0x18,R24
(0257) 	
(0258) 	DDRE=0x00;  
    00363 2422      CLR	R2
    00364 B822      OUT	0x02,R2
(0259) 	PORTE=0xF0;
    00365 EF80      LDI	R24,0xF0
    00366 B983      OUT	0x03,R24
    00367 9508      RET
(0260) 
(0261) }
(0262)   
(0263) 
(0264) 
(0265) 
(0266) void main(){
(0267)    //unsigned char i;
(0268)      int a=0;
(0269) 	 int i,j,k=0;
_main:
  a                    --> R10
  i                    --> R20
  j                    --> R22
  k                    --> R10
    00368 24AA      CLR	R10
    00369 24BB      CLR	R11
(0270)    PWM_init();
    0036A DD42      RCALL	_PWM_init
    0036B C059      RJMP	0x03C5
(0271)    //key_init();
(0272)    //uart1_init();
(0273)    //puts1("HELLO!");
(0274)    while(1){
(0275)    for(i=0;i<100;i++){
    0036C 2744      CLR	R20
    0036D 2755      CLR	R21
(0276)    			{for(j=0;j<10;j++)
    0036E 2766      CLR	R22
    0036F 2777      CLR	R23
(0277)    			{for(k=0;k<1;k++)   //k<10,约三秒  
    00370 24AA      CLR	R10
    00371 24BB      CLR	R11
    00372 01C5      MOVW	R24,R10
    00373 9601      ADIW	R24,1
    00374 015C      MOVW	R10,R24
    00375 3081      CPI	R24,1
    00376 E0E0      LDI	R30,0
    00377 079E      CPC	R25,R30
    00378 F3CC      BLT	0x0372
    00379 5F6F      SUBI	R22,0xFF
    0037A 4F7F      SBCI	R23,0xFF
    0037B 3E68      CPI	R22,0xE8
    0037C E0E3      LDI	R30,3
    0037D 077E      CPC	R23,R30
    0037E F38C      BLT	0x0370
    0037F 5F4F      SUBI	R20,0xFF
    00380 4F5F      SBCI	R21,0xFF
    00381 3E48      CPI	R20,0xE8
    00382 E0E3      LDI	R30,3
    00383 075E      CPC	R21,R30
    00384 F34C      BLT	0x036E
(0278)     					; 
(0279)  	         }
(0280)    	         }
(0281) 			 }
(0282)    OCR1A=6000-OCR1A;
    00385 B42A      IN	R2,0x2A
    00386 B43B      IN	R3,0x2B
    00387 E780      LDI	R24,0x70
    00388 E197      LDI	R25,0x17
    00389 1982      SUB	R24,R2
    0038A 0993      SBC	R25,R3
    0038B BD9B      OUT	0x2B,R25
    0038C BD8A      OUT	0x2A,R24
(0283) 	OCR1B=6000-OCR1B;
    0038D B428      IN	R2,0x28
    0038E B439      IN	R3,0x29
    0038F E780      LDI	R24,0x70
    00390 E197      LDI	R25,0x17
    00391 1982      SUB	R24,R2
    00392 0993      SBC	R25,R3
    00393 BD99      OUT	0x29,R25
    00394 BD88      OUT	0x28,R24
(0284) 	OCR1C=6000-OCR1C;
    00395 9020 0078 LDS	R2,0x78
    00397 9030 0079 LDS	R3,0x79
    00399 E780      LDI	R24,0x70
    0039A E197      LDI	R25,0x17
    0039B 1982      SUB	R24,R2
    0039C 0993      SBC	R25,R3
    0039D 9390 0079 STS	0x79,R25
    0039F 9380 0078 STS	0x78,R24
(0285) 	OCR3A=6000-OCR3A;
    003A1 9020 0086 LDS	R2,0x86
    003A3 9030 0087 LDS	R3,0x87
    003A5 E780      LDI	R24,0x70
    003A6 E197      LDI	R25,0x17
    003A7 1982      SUB	R24,R2
    003A8 0993      SBC	R25,R3
    003A9 9390 0087 STS	0x87,R25
    003AB 9380 0086 STS	0x86,R24
(0286) 	OCR3B=6000-OCR3B;
    003AD 9020 0084 LDS	R2,0x84
    003AF 9030 0085 LDS	R3,0x85
    003B1 E780      LDI	R24,0x70
    003B2 E197      LDI	R25,0x17
    003B3 1982      SUB	R24,R2
    003B4 0993      SBC	R25,R3
    003B5 9390 0085 STS	0x85,R25
    003B7 9380 0084 STS	0x84,R24
(0287) 	OCR3C=6000-OCR3C;
FILE: <library>
    003B9 9020 0082 LDS	R2,0x82
    003BB 9030 0083 LDS	R3,0x83
    003BD E780      LDI	R24,0x70
    003BE E197      LDI	R25,0x17
    003BF 1982      SUB	R24,R2
    003C0 0993      SBC	R25,R3
    003C1 9390 0083 STS	0x83,R25
    003C3 9380 0082 STS	0x82,R24
    003C5 CFA6      RJMP	0x036C
    003C6 9508      RET
push_xgsetF03C:
    003C7 937A      ST	-Y,R23
    003C8 936A      ST	-Y,R22
    003C9 935A      ST	-Y,R21
    003CA 934A      ST	-Y,R20
    003CB 92DA      ST	-Y,R13
    003CC 92CA      ST	-Y,R12
    003CD 92BA      ST	-Y,R11
    003CE 92AA      ST	-Y,R10
    003CF 9508      RET
pop_xgsetF03C:
    003D0 90A9      LD	R10,Y+
    003D1 90B9      LD	R11,Y+
    003D2 90C9      LD	R12,Y+
    003D3 90D9      LD	R13,Y+
    003D4 9149      LD	R20,Y+
    003D5 9159      LD	R21,Y+
    003D6 9169      LD	R22,Y+
    003D7 9179      LD	R23,Y+
    003D8 9508      RET
